{"version":3,"file":"ractive-router.es.js","sources":["../src/ractive-router.js"],"sourcesContent":["import Ractive from 'ractive';\nimport hasher from 'hasher';\nimport crossroads from 'crossroads';\n\nexport default Ractive.extend({\n    template: `\n        <main class=\"routeContainer\"></main>\n    `,\n    oninit () {\n        this.routesConfig = this.get('config');\n        this.routes = [];\n        Object.keys(this.routesConfig).map((pattern) => {\n            let routeConfig = this.routesConfig[pattern];\n            let routeObject = crossroads.addRoute(pattern, function () {\n                let container = this.find('main.routeContainer');\n                //\n                let values = arguments;\n                let pathParamNames = crossroads.patternLexer.getParamIds(pattern);\n                let pathParams = pathParamNames.reduce((result, field, index) => {\n                    result[field] = values[index] || undefined;\n                    return result;\n                }, {});\n                //\n                let callback = routeConfig.callback instanceof Function ? routeConfig.callback : undefined;\n                let component = routeConfig.component;\n                if (component) {\n                    new component({\n                        el: container,\n                        data: {\n                            pathParams\n                        },\n                        oncomplete () {\n                            if (callback) callback(pathParams);\n                        }\n                    });\n                } else {\n                    if (callback) callback(pathParams);\n                }\n            }.bind(this));\n            this.routes.push(routeObject);\n        });\n        //\n        crossroads.bypassed.add(function(){\n            hasher.replaceHash('404');\n        });\n    },\n    onrender () {\n        let parseHash = function (newHash, oldHash) {\n            crossroads.parse(newHash);\n        };\n        hasher.initialized.add(parseHash);\n        hasher.changed.add(parseHash);\n        hasher.prependHash = '';\n        hasher.init();\n        //launch home\n        if (!location.hash) {\n            var pattern = Object.keys(this.routesConfig).find((patten)=> {\n                return this.routesConfig[patten].index;\n            });\n            if (pattern) {\n                hasher.replaceHash(pattern);\n            }\n        }\n    }\n});"],"names":[],"mappings":";;;;oBAIe,QAAQ,MAAR,CAAe;oEAAA;8BAIhB;;;aACD,YAAL,GAAoB,KAAK,GAAL,CAAS,QAAT,CAApB,CADM;aAED,MAAL,GAAc,EAAd,CAFM;eAGC,IAAP,CAAY,KAAK,YAAL,CAAZ,CAA+B,GAA/B,CAAmC,UAAC,OAAD,EAAa;gBACxC,cAAc,MAAK,YAAL,CAAkB,OAAlB,CAAd,CADwC;gBAExC,cAAc,WAAW,QAAX,CAAoB,OAApB,EAA6B,YAAY;oBACnD,YAAY,KAAK,IAAL,CAAU,qBAAV,CAAZ;;oBAEA,SAAS,SAAT,CAHmD;oBAInD,iBAAiB,WAAW,YAAX,CAAwB,WAAxB,CAAoC,OAApC,CAAjB,CAJmD;oBAKnD,aAAa,eAAe,MAAf,CAAsB,UAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAA0B;2BACtD,KAAP,IAAgB,OAAO,KAAP,KAAiB,SAAjB,CAD6C;2BAEtD,MAAP,CAF6D;iBAA1B,EAGpC,EAHc,CAAb;;oBAKA,WAAW,YAAY,QAAZ,YAAgC,QAAhC,GAA2C,YAAY,QAAZ,GAAuB,SAAlE,CAVwC;oBAWnD,YAAY,YAAY,SAAZ,CAXuC;oBAYnD,SAAJ,EAAe;wBACP,SAAJ,CAAc;4BACN,SAAJ;8BACM;kDAAA;yBAAN;0DAGc;gCACN,QAAJ,EAAc,SAAS,UAAT,EAAd;yBANM;qBAAd,EADW;iBAAf,MAUO;wBACC,QAAJ,EAAc,SAAS,UAAT,EAAd;iBAXJ;aAZ2C,CAyB7C,IAzB6C,OAA7B,CAAd,CAFwC;kBA4BvC,MAAL,CAAY,IAAZ,CAAiB,WAAjB,EA5B4C;SAAb,CAAnC;;kBA+BA,CAAW,QAAX,CAAoB,GAApB,CAAwB,YAAU;mBACvB,WAAP,CAAmB,KAAnB,EAD8B;SAAV,CAAxB,CAlCM;KAJgB;kCA0Cd;;;YACJ,YAAY,SAAZ,SAAY,CAAU,OAAV,EAAmB,OAAnB,EAA4B;uBAC7B,KAAX,CAAiB,OAAjB,EADwC;SAA5B,CADR;eAID,WAAP,CAAmB,GAAnB,CAAuB,SAAvB,EAJQ;eAKD,OAAP,CAAe,GAAf,CAAmB,SAAnB,EALQ;eAMD,WAAP,GAAqB,EAArB,CANQ;eAOD,IAAP;;YAEI,CAAC,SAAS,IAAT,EAAe;gBACZ,UAAU,OAAO,IAAP,CAAY,KAAK,YAAL,CAAZ,CAA+B,IAA/B,CAAoC,UAAC,MAAD,EAAW;uBAClD,OAAK,YAAL,CAAkB,MAAlB,EAA0B,KAA1B,CADkD;aAAX,CAA9C,CADY;gBAIZ,OAAJ,EAAa;uBACF,WAAP,CAAmB,OAAnB,EADS;aAAb;SAJJ;KAnDsB;CAAf,CAAf;;"}